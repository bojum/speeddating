[
["index.html", "How to Get More Matches in Speed Dating Chapter 1 Introduction", " How to Get More Matches in Speed Dating Yingyu Cao (yc3713), Bo Jumrustanasan (pj2356), Michael Qi (zq2175) 2019-12-12 Chapter 1 Introduction library(knitr) library(kableExtra) library(tidyverse) ## to locally render the book bookdown::render_book(&quot;index.Rmd&quot;) browseURL(&quot;docs/index.html&quot;) "],
["data-sources.html", "Chapter 2 Data sources 2.1 Experimental Design 2.2 Data Description", " Chapter 2 Data sources The dataset for our project is speed dating dataset provided by Anna Montoya. It is publicly available on Data.com as an excel file. The data contains information about match and questionnaire from a speed dating experiment in 2002-2004 that was run by professors Ray Fisman and Sheena Iyengar from Columbia Business School. The primamry purpose of the collection was for their paper Gender Differences in Mate Selection: Evidence From a Speed Dating Experiment. 2.1 Experimental Design The experiment is design based on Speed Dating which is an event where participants have a four-minute conversation and decide if they want to meet each other again. They will get the other’s contact information only if both parties “accept”. Subjects in the experiments were students in graduate and professional school at Columbia University during the time of the experiment. They learned about the event through mass e-mail and fliers on distributed on campus. They had to sign up for the event by providing the experimentors with their names and email addresses and completing a pre-event survey ononline website. There were 20 sessions of the experiment, all of which had the same setting. All participants were randomly assigned to one of the sessions. On the session day, participants who are unawared of the total number of participants on that day had to fill in a scorecard that contains Spaces to write the ID number of each person they met Yes/No whether a subject wants to meet the person again Six attributes on which a subject was to rate the person they met. The attributes are: Attractive Sincere Intelligent Fun Ambitious Shared Interests There were roughly the same number of female and male participants in each sessions. Subjects only had conversation with those of different genders. Female subjects would meet all male subjects in the session. The scorecard was to be filled after each four-minute conversation. The day after the Speed Dating event, particiapants were asked to complete the follow-up online questionaire in order to obtain their matches. For more detail on the experiment procedure, please check out the study. 2.2 Data Description The raw dataset from the source has 195 variables and 8378 rows. The number of rows do not represent the total number of participants in the experiment. The data provider had transformed the dataset by gathering to match some variables between a subject and each of its partner. We have further cleaned the dataset so that it includes only important variables (see more detail in data cleaning section). Variables in the analysis is summarized in the metadata below. data_dict &lt;- read.csv(file = &quot;data/metadata_var.csv&quot;) %&gt;% select(Variable, Description) data_dict %&gt;% kable %&gt;% kable_styling() %&gt;% kableExtra::scroll_box(width = &quot;100%&quot;, height = &quot;600px&quot;) Variable Description iid Unique subject number, wave Session number gender female/male race Race of a subject Black/African American=1 European/Caucasian-American=2 Latino/Hispanic American=3 Asian/Pacific Islander/Asian-American=4 Native American=5 Other=6 from Where are you from originally (before coming to Columbia)? field Field of study field_cd Field code 1= Law 2= Math 3= Social Science, Psychologist 4= Medical Science, Pharmaceuticals, and Bio Tech 5= Engineering 6= English/Creative Writing/ Journalism 7= History/Religion/Philosophy 8= Business/Econ/Finance 9= Education, Academia 10= Biological Sciences/Chemistry/Physics 11= Social Work 12= Undergrad/undecided 13=Political Science/International Affairs 14=Film 15=Fine Arts/Arts Administration 16=Languages 17=Architecture 18=Other [acticity] How interested are you in [activity] on a scale of 1-10? [activity] are sports, tvsports, exercise, dining, museums, art, hiking, gaming, clubbing, reading, tv, theater, movies, concerts, music, shopping, and yoga pid Partner’s iid number match Whether iid and pid are matched. 1=yes, 0=no dec_o Decision of partner the night of event samerace Whether iid and pid have the same race race_o Race of partner attr How attractive is a person you met, on a scale of 1-10? sinc How sincere is a person you met, on a scale of 1-10? intel How intelligent is a person you met, on a scale of 1-10? fun How fun is a person you met, on a scale of 1-10? amb How ambitious is a person you met, on a scale of 1-10? shar How much do you and a person you met share the same interest, on a scale of 1-10? like Overall, how much do you like this person? (1=don’t like at all, 10=like a lot) prob How probable do you think it is that this person will say ‘yes’ for you? (1=not probable, 10=extremely probable) goal The primary goal a subject participated in the event. 1 = Seemed like a fun night out 2 = To meet new people 3 = To get a date 4 = Looking for a serious relationship 5 = To say I did it 6 = Other Participants were also asked to rate five (and six in some cases) attributes for themselves and for people they met (i) before the event (if applicable), (ii) a day after the event, and (iii) 2 weeks after the event. The variable names are in the form of [attribute][#]_[#]. read.csv(file = &quot;data/metadata_attr.csv&quot;) %&gt;% kable %&gt;% kable_styling() %&gt;% kableExtra::scroll_box(width = &quot;100%&quot;, height = &quot;600px&quot;) Code Description [attr] attr = attractive sinc = sincere fun = fun intel = intelligent amb = ambitious shar = share the same interest [#1] 1 = Rate yourself 3 = Rate a person you meet [#2] 1 = questions asked before the event (if applicable) 2 = questions asked one day after the event 3 = questions asked two weeks after the event For more information about the raw data and questionaire, see the metadata from the dataset provider. "],
["data-transformation.html", "Chapter 3 Data transformation", " Chapter 3 Data transformation The raw dataset contains 195 variables with 8378 rows. Only a subset of 195 variables are included in our analysis (more detail for this step in data transformation section). Below is a script file that we use to clean the dataset. speed_dating &lt;- raw_dat %&gt;% select(iid,wave,gender,age,race,from,field,field_cd,undergra,mn_sat,tuition,income, imprace,expnum, sports:yoga, attr1_1:shar1_1, # exp weight to others-1 attr1_s:shar1_s, # exp weight to others-2 attr3_1:amb3_1, # self-evaluate-1 (self)-1 attr3_s:amb3_s, # self-evaluate-1 (self)-2 attr5_1:amb5_1, # self-evaluate-2 (others)-1 wave,pid,met_o,match,dec_o,int_corr,samerace,age_o,race_o, pf_o_att:pf_o_sha, # score to others attr_o:shar_o,like_o,prob_o, # score received attr1_2:shar1_2, # exp weight to others-3 attr3_2:amb3_2, # self-evaluate-1 (self)-3 attr5_2:amb5_2, # self-evaluate-2 (others)-2 you_call,them_cal, attr1_3:shar1_3, # exp weight to others-4 attr3_3:amb3_3, # self-evaluate-1 (self)-4 attr5_3:amb5_3, # self-evaluate-2 (others)-3 attr:shar,like,prob ) # add indicator columns # operate row by row for (i in 1:nrow(speed_dating)) { # for each row, get partner&#39;s id pid = speed_dating[i, &#39;pid&#39;] # add temporary columns that holds partner&#39;s location, field, sports, reading, movies speed_dating[i, &#39;plocation&#39;] = speed_dating[which(speed_dating$iid == pid)[1], &#39;from&#39;] speed_dating[i, &#39;pfield&#39;] = speed_dating[which(speed_dating$iid == pid)[1], &#39;field&#39;] speed_dating[i, &#39;psports&#39;] = speed_dating[which(speed_dating$iid == pid)[1], &#39;sports&#39;] speed_dating[i, &#39;preading&#39;] = speed_dating[which(speed_dating$iid == pid)[1], &#39;reading&#39;] speed_dating[i, &#39;pmovies&#39;] = speed_dating[which(speed_dating$iid == pid)[1], &#39;movies&#39;] } # append indicator columns that indicates whether this person and his/her partner share this feature speed_dating[&#39;samelocation&#39;] &lt;- if_else(speed_dating$from == speed_dating$plocation, &#39;Yes&#39;, &#39;No&#39;) speed_dating[&#39;samefield&#39;] &lt;- if_else(speed_dating$field == speed_dating$pfield, &#39;Yes&#39;, &#39;No&#39;) speed_dating[&#39;samesports&#39;] &lt;- if_else(speed_dating$psports &gt;=7 &amp; speed_dating$sports&gt;=7, &#39;Yes&#39;, &#39;No&#39;) speed_dating[&#39;samereading&#39;] &lt;- if_else(speed_dating$preading &gt;=7 &amp; speed_dating$reading&gt;=7, &#39;Yes&#39;, &#39;No&#39;) speed_dating[&#39;samemovies&#39;] &lt;- if_else(speed_dating$pmovies &gt;=7 &amp; speed_dating$movies&gt;=7, &#39;Yes&#39;, &#39;No&#39;) # drop unecessary columns and missing data drops = c(&#39;plocation&#39;, &#39;pfield&#39;, &#39;psports&#39;, &#39;preading&#39;, &#39;pmovies&#39;) keeps = c(&#39;samerace&#39;, &#39;samelocation&#39;, &#39;samefield&#39;, &#39;samesports&#39;, &#39;samesports&#39;, &#39;samemovies&#39;) speed_dating &lt;- speed_dating[ , !(names(speed_dating) %in% drops)] speed_dating &lt;- speed_dating[complete.cases(speed_dating[,keeps]), ] "],
["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values "],
["results.html", "Chapter 5 Results 5.1 Question: Will backrgound and common interests influence the match? Which feature is the most influential?", " Chapter 5 Results 5.1 Question: Will backrgound and common interests influence the match? Which feature is the most influential? To answer this question, we have to look at background and common interests seperately. Background includes three features: race, from, and field. We can do so by comparing the chance of matching by conditioning on whether they are from the same race, same from (location), and same field. Data Cleaning: we would like to append 6 indicator columns that indicates whether this person and his/her partner share that feature in common (actually 5 because samerace is available in the original data). library(ggplot2) library(tidyverse) library(vcd) library(jsonlite) load(&#39;data/speed_dating.RData&#39;) # get feature values of the partner for (i in 1:nrow(speed_dating)) { # for each row, get partner&#39;s id pid = speed_dating[i, &#39;pid&#39;] # add temporary columns that holds partner&#39;s location, field, sports, reading, movies speed_dating[i, &#39;plocation&#39;] = speed_dating[which(speed_dating$iid == pid)[1], &#39;from&#39;] speed_dating[i, &#39;pfield&#39;] = speed_dating[which(speed_dating$iid == pid)[1], &#39;field&#39;] } # append indicator columns for location, field, and income speed_dating[&#39;samelocation&#39;] &lt;- if_else(speed_dating$from == speed_dating$plocation, &#39;Yes&#39;, &#39;No&#39;) speed_dating[&#39;samefield&#39;] &lt;- if_else(speed_dating$field == speed_dating$pfield, &#39;Yes&#39;, &#39;No&#39;) # get the feature values of all the hobbies of the partner f &lt;- function(x){ tmp &lt;- data.frame(&quot;holder&quot; = 1:dim(speed_dating)[1]) result &lt;- data.frame(&quot;holder&quot; = 1:dim(speed_dating)[1]) for (i in 1:nrow(speed_dating)){ pid = speed_dating[i, &#39;pid&#39;] tmp[i,1] &lt;- speed_dating[which(speed_dating$iid == pid)[1], x] } for (i in 1:nrow(speed_dating)) { result[i,1] &lt;- if_else((tmp[i,1] &gt;=7 &amp; speed_dating[i,x]&gt;=7), &#39;Yes&#39;, &#39;No&#39;) } return(result) } names = colnames(speed_dating %&gt;% select(sports:yoga)) common_features &lt;- as.data.frame(do.call(cbind,lapply(names, f))) colnames(common_features)&lt;- paste0(&#39;same&#39;,colnames(speed_dating %&gt;% select(sports:yoga))) speed_dating &lt;- cbind(speed_dating, common_features) speed_dating &lt;- speed_dating[, !duplicated(colnames(speed_dating))] # drop unecessary columns and missing data drops = c(&#39;plocation&#39;, &#39;pfield&#39;) keeps = append(colnames(speed_dating %&gt;% select(sports:yoga)), c(&#39;samelocation&#39;, &#39;samefield&#39;)) speed_dating_q1 &lt;- speed_dating[complete.cases(speed_dating[,keeps]), ] speed_dating &lt;- speed_dating_q1 ## end here save(speed_dating_q1, file = &quot;data/speed_dating_q1.Rdata&quot;) # for mosaic plot # create a clean dataframe for each common feature sameracedata = speed_dating %&gt;% group_by(samerace, match) %&gt;% summarise(Freq = n()) %&gt;% ungroup() %&gt;% mutate(samerace = if_else(samerace == 1, &quot;Yes&quot;, &quot;No&quot;)) %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) samelocationdata = speed_dating %&gt;% group_by(samelocation, match) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) samefielddata = speed_dating %&gt;% group_by(samefield, match) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) samesportsdata = speed_dating %&gt;% group_by(samesports, match) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) samereadingdata = speed_dating %&gt;% group_by(samereading, match) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) samemoviesdata = speed_dating %&gt;% group_by(samemovies, match) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) cat( paste( &#39;&lt;script&gt; var sameracedata = &#39;,toJSON(sameracedata),&#39;; var samelocationdata = &#39;,toJSON(samelocationdata),&#39;; var samefielddata = &#39;,toJSON(samefielddata),&#39;; var samesportsdata = &#39;,toJSON(samesportsdata),&#39;; var samereadingdata = &#39;,toJSON(samereadingdata),&#39;; var samemoviesdata = &#39;,toJSON(samemoviesdata),&#39;; &lt;/script&gt;&#39; , sep=&quot;&quot;) ) ## &lt;script&gt; ## var sameracedata = [{&quot;samerace&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:3398},{&quot;samerace&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:620},{&quot;samerace&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:2164},{&quot;samerace&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:476}]; ## var samelocationdata = [{&quot;samelocation&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:5516},{&quot;samelocation&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:1082},{&quot;samelocation&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:46},{&quot;samelocation&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:14}]; ## var samefielddata = [{&quot;samefield&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:5460},{&quot;samefield&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:1054},{&quot;samefield&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:102},{&quot;samefield&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:42}]; ## var samesportsdata = [{&quot;samesports&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:4012},{&quot;samesports&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:746},{&quot;samesports&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:1550},{&quot;samesports&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:350}]; ## var samereadingdata = [{&quot;samereading&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:2408},{&quot;samereading&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:424},{&quot;samereading&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:3154},{&quot;samereading&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:672}]; ## var samemoviesdata = [{&quot;samemovies&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:1570},{&quot;samemovies&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:344},{&quot;samemovies&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:3992},{&quot;samemovies&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:752}]; ## &lt;/script&gt; We then look at all the available features that could be of common interest in the dataset, and see if any of those features heavily impacts the chances of getting matched. calc_diff &lt;- function(x){ tmp &lt;- speed_dating %&gt;% group_by_(x, &#39;match&#39;) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) no_rate &lt;- tmp[2,3]/(tmp[2,3]+tmp[1,3]) yes_rate &lt;- tmp[4,3]/(tmp[3,3]+tmp[4,3]) return(yes_rate - no_rate) } cd_df &lt;- do.call(rbind,lapply(paste0(&#39;same&#39;,colnames(speed_dating %&gt;% select(sports:yoga))),calc_diff))*100 cd_df &lt;- cbind(cd_df, names) ggplot(cd_df,aes(x=Freq,y=fct_reorder(names,Freq)))+geom_point(color=&quot;blue&quot;)+ylab(&quot;&quot;)+xlab(&quot;Percent (%)&quot;)+ggtitle(&quot;Differences in Chance of Matching&quot;) "],
["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component "],
["conclusion.html", "Chapter 7 Conclusion 7.1 Question: Will backrgound and common interests influence the match? Which feature is the most influential?", " Chapter 7 Conclusion 7.1 Question: Will backrgound and common interests influence the match? Which feature is the most influential? To answer this question, we have to look at background and common interests seperately. Background includes three features: race, from, and field. We can do so by comparing the chance of matching by conditioning on whether they are from the same race, same from (location), and same field. Data Cleaning: we would like to append 6 indicator columns that indicates whether this person and his/her partner share that feature in common (actually 5 because samerace is available in the original data). library(ggplot2) library(tidyverse) library(vcd) library(jsonlite) load(&#39;data/speed_dating.RData&#39;) # get feature values of the partner for (i in 1:nrow(speed_dating)) { # for each row, get partner&#39;s id pid = speed_dating[i, &#39;pid&#39;] # add temporary columns that holds partner&#39;s location, field, sports, reading, movies speed_dating[i, &#39;plocation&#39;] = speed_dating[which(speed_dating$iid == pid)[1], &#39;from&#39;] speed_dating[i, &#39;pfield&#39;] = speed_dating[which(speed_dating$iid == pid)[1], &#39;field&#39;] } # append indicator columns for location, field, and income speed_dating[&#39;samelocation&#39;] &lt;- if_else(speed_dating$from == speed_dating$plocation, &#39;Yes&#39;, &#39;No&#39;) speed_dating[&#39;samefield&#39;] &lt;- if_else(speed_dating$field == speed_dating$pfield, &#39;Yes&#39;, &#39;No&#39;) # get the feature values of all the hobbies of the partner f &lt;- function(x){ tmp &lt;- data.frame(&quot;holder&quot; = 1:dim(speed_dating)[1]) result &lt;- data.frame(&quot;holder&quot; = 1:dim(speed_dating)[1]) for (i in 1:nrow(speed_dating)){ pid = speed_dating[i, &#39;pid&#39;] tmp[i,1] &lt;- speed_dating[which(speed_dating$iid == pid)[1], x] } for (i in 1:nrow(speed_dating)) { result[i,1] &lt;- if_else((tmp[i,1] &gt;=7 &amp; speed_dating[i,x]&gt;=7), &#39;Yes&#39;, &#39;No&#39;) } return(result) } names = colnames(speed_dating %&gt;% select(sports:yoga)) common_features &lt;- as.data.frame(do.call(cbind,lapply(names, f))) colnames(common_features)&lt;- paste0(&#39;same&#39;,colnames(speed_dating %&gt;% select(sports:yoga))) speed_dating &lt;- cbind(speed_dating, common_features) speed_dating &lt;- speed_dating[, !duplicated(colnames(speed_dating))] # drop unecessary columns and missing data drops = c(&#39;plocation&#39;, &#39;pfield&#39;) keeps = append(colnames(speed_dating %&gt;% select(sports:yoga)), c(&#39;samelocation&#39;, &#39;samefield&#39;)) speed_dating_q1 &lt;- speed_dating[complete.cases(speed_dating[,keeps]), ] speed_dating &lt;- speed_dating_q1 ## end here save(speed_dating_q1, file = &quot;data/speed_dating_q1.Rdata&quot;) # for mosaic plot # create a clean dataframe for each common feature sameracedata = speed_dating %&gt;% group_by(samerace, match) %&gt;% summarise(Freq = n()) %&gt;% ungroup() %&gt;% mutate(samerace = if_else(samerace == 1, &quot;Yes&quot;, &quot;No&quot;)) %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) samelocationdata = speed_dating %&gt;% group_by(samelocation, match) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) samefielddata = speed_dating %&gt;% group_by(samefield, match) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) samesportsdata = speed_dating %&gt;% group_by(samesports, match) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) samereadingdata = speed_dating %&gt;% group_by(samereading, match) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) samemoviesdata = speed_dating %&gt;% group_by(samemovies, match) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) cat( paste( &#39;&lt;script&gt; var sameracedata = &#39;,toJSON(sameracedata),&#39;; var samelocationdata = &#39;,toJSON(samelocationdata),&#39;; var samefielddata = &#39;,toJSON(samefielddata),&#39;; var samesportsdata = &#39;,toJSON(samesportsdata),&#39;; var samereadingdata = &#39;,toJSON(samereadingdata),&#39;; var samemoviesdata = &#39;,toJSON(samemoviesdata),&#39;; &lt;/script&gt;&#39; , sep=&quot;&quot;) ) ## &lt;script&gt; ## var sameracedata = [{&quot;samerace&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:3398},{&quot;samerace&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:620},{&quot;samerace&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:2164},{&quot;samerace&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:476}]; ## var samelocationdata = [{&quot;samelocation&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:5516},{&quot;samelocation&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:1082},{&quot;samelocation&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:46},{&quot;samelocation&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:14}]; ## var samefielddata = [{&quot;samefield&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:5460},{&quot;samefield&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:1054},{&quot;samefield&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:102},{&quot;samefield&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:42}]; ## var samesportsdata = [{&quot;samesports&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:4012},{&quot;samesports&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:746},{&quot;samesports&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:1550},{&quot;samesports&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:350}]; ## var samereadingdata = [{&quot;samereading&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:2408},{&quot;samereading&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:424},{&quot;samereading&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:3154},{&quot;samereading&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:672}]; ## var samemoviesdata = [{&quot;samemovies&quot;:&quot;No&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:1570},{&quot;samemovies&quot;:&quot;No&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:344},{&quot;samemovies&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;No&quot;,&quot;Freq&quot;:3992},{&quot;samemovies&quot;:&quot;Yes&quot;,&quot;match&quot;:&quot;Yes&quot;,&quot;Freq&quot;:752}]; ## &lt;/script&gt; We then look at all the available features that could be of common interest in the dataset, and see if any of those features heavily impacts the chances of getting matched. calc_diff &lt;- function(x){ tmp &lt;- speed_dating %&gt;% group_by_(x, &#39;match&#39;) %&gt;% summarize(Freq = n()) %&gt;% ungroup() %&gt;% mutate(match = if_else(match == 1, &quot;Yes&quot;, &quot;No&quot;)) no_rate &lt;- tmp[2,3]/(tmp[2,3]+tmp[1,3]) yes_rate &lt;- tmp[4,3]/(tmp[3,3]+tmp[4,3]) return(yes_rate - no_rate) } cd_df &lt;- do.call(rbind,lapply(paste0(&#39;same&#39;,colnames(speed_dating %&gt;% select(sports:yoga))),calc_diff))*100 cd_df &lt;- cbind(cd_df, names) ggplot(cd_df,aes(x=Freq,y=fct_reorder(names,Freq)))+geom_point(color=&quot;blue&quot;)+ylab(&quot;&quot;)+xlab(&quot;Percent (%)&quot;)+ggtitle(&quot;Differences in Chance of Matching&quot;) "]
]
